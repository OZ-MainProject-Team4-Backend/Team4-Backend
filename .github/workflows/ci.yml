name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install dependencies
      run: /home/runner/.local/bin/uv sync --all-packages

    - name: Create .env file
      run: cp .env.example .env

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Run migrations and tests
      run: |
        docker-compose -f docker-compose.yml up -d aws-db
        sleep 10 # Give PostgreSQL time to start
        docker-compose exec aws-web /home/runner/.local/bin/uv run python manage.py migrate
        docker-compose exec aws-web /home/runner/.local/bin/uv run python manage.py test

    - name: Run ruff linting
      run: /home/runner/.local/bin/uv run ruff check .