# Generated by Django 5.2.7 on 2025-10-28 06:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=150)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'locations',
                'indexes': [
                    models.Index(fields=['name'], name='locations_name_ce8723_idx'),
                    models.Index(
                        fields=['latitude', 'longitude'],
                        name='locations_latitud_4052bd_idx',
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('provider', models.CharField(max_length=50)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.FloatField()),
                ('feels_like', models.FloatField()),
                ('humidity', models.IntegerField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('rain_probability', models.FloatField(blank=True, null=True)),
                ('condition', models.CharField(max_length=100)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'location',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='weather_data',
                        to='weather.location',
                    ),
                ),
            ],
            options={
                'db_table': 'weather_data',
            },
        ),
        migrations.CreateModel(
            name='WeatherHistory',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('archived_at', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, null=True)),
                (
                    'weather_data',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='histories',
                        to='weather.weatherdata',
                    ),
                ),
            ],
            options={
                'db_table': 'weather_history',
            },
        ),
        migrations.CreateModel(
            name='FavoriteLocation',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('alias', models.CharField(blank=True, max_length=100, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='favorite_locations',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'location',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='favorites',
                        to='weather.location',
                    ),
                ),
            ],
            options={
                'db_table': 'favorite_locations',
                'constraints': [
                    models.UniqueConstraint(
                        fields=('user', 'location'), name='uq_user_location'
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(('is_default', True)),
                        fields=('user',),
                        name='uq_user_default_location',
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name='weatherdata',
            index=models.Index(
                fields=['location'], name='weather_dat_locatio_7c8b74_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='weatherdata',
            index=models.Index(
                fields=['provider'], name='weather_dat_provide_2c1fe8_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='weatherdata',
            index=models.Index(
                fields=['condition'], name='weather_dat_conditi_1336a7_idx'
            ),
        ),
        migrations.AddConstraint(
            model_name='weatherdata',
            constraint=models.UniqueConstraint(
                fields=('location', 'provider', 'fetched_at'),
                name='uq_weather_snapshot',
            ),
        ),
    ]
